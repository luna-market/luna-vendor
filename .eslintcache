[{"/Users/yuhengchen/Files/luna/luna-vendor/src/index.js":"1","/Users/yuhengchen/Files/luna/luna-vendor/src/reportWebVitals.js":"2","/Users/yuhengchen/Files/luna/luna-vendor/src/App.js":"3","/Users/yuhengchen/Files/luna/luna-vendor/src/constants.js":"4","/Users/yuhengchen/Files/luna/luna-vendor/src/containers/Error.js":"5","/Users/yuhengchen/Files/luna/luna-vendor/src/containers/Auth.js":"6","/Users/yuhengchen/Files/luna/luna-vendor/src/components/Navigation/Navigation.js":"7","/Users/yuhengchen/Files/luna/luna-vendor/src/components/ProductList/TableView.js":"8","/Users/yuhengchen/Files/luna/luna-vendor/src/components/ProductList/CardView.js":"9","/Users/yuhengchen/Files/luna/luna-vendor/src/components/Loading.js":"10","/Users/yuhengchen/Files/luna/luna-vendor/src/components/ProductList/ProductCard.js":"11","/Users/yuhengchen/Files/luna/luna-vendor/src/containers/Profile.js":"12","/Users/yuhengchen/Files/luna/luna-vendor/src/containers/Product/AddProduct.js":"13","/Users/yuhengchen/Files/luna/luna-vendor/src/containers/Product/ViewProduct.js":"14","/Users/yuhengchen/Files/luna/luna-vendor/src/containers/Product/ProductList.js":"15","/Users/yuhengchen/Files/luna/luna-vendor/src/containers/Order/Order.js":"16","/Users/yuhengchen/Files/luna/luna-vendor/src/containers/Order/OrderList.js":"17","/Users/yuhengchen/Files/luna/luna-vendor/src/components/OrderItem.js":"18"},{"size":1417,"mtime":1612080309885,"results":"19","hashOfConfig":"20"},{"size":362,"mtime":1611311514049,"results":"21","hashOfConfig":"20"},{"size":1221,"mtime":1612858976370,"results":"22","hashOfConfig":"20"},{"size":73,"mtime":1612080309885,"results":"23","hashOfConfig":"20"},{"size":613,"mtime":1612084926632,"results":"24","hashOfConfig":"20"},{"size":4644,"mtime":1612925870763,"results":"25","hashOfConfig":"20"},{"size":1809,"mtime":1612959864317,"results":"26","hashOfConfig":"20"},{"size":1024,"mtime":1612081648180,"results":"27","hashOfConfig":"20"},{"size":1718,"mtime":1612964055671,"results":"28","hashOfConfig":"20"},{"size":568,"mtime":1612940372890,"results":"29","hashOfConfig":"20"},{"size":2149,"mtime":1612966056696,"results":"30","hashOfConfig":"20"},{"size":3744,"mtime":1612925874806,"results":"31","hashOfConfig":"20"},{"size":11505,"mtime":1612925902368,"results":"32","hashOfConfig":"20"},{"size":18200,"mtime":1613036936200,"results":"33","hashOfConfig":"20"},{"size":1119,"mtime":1612925889971,"results":"34","hashOfConfig":"20"},{"size":7123,"mtime":1612962052700,"results":"35","hashOfConfig":"20"},{"size":1367,"mtime":1612967140012,"results":"36","hashOfConfig":"20"},{"size":2375,"mtime":1612927454418,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"165dfse",{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"40"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"40"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"69","messages":"70","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"40"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"40"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"40"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"40"},"/Users/yuhengchen/Files/luna/luna-vendor/src/index.js",[],["81","82"],"/Users/yuhengchen/Files/luna/luna-vendor/src/reportWebVitals.js",[],"/Users/yuhengchen/Files/luna/luna-vendor/src/App.js",[],"/Users/yuhengchen/Files/luna/luna-vendor/src/constants.js",[],"/Users/yuhengchen/Files/luna/luna-vendor/src/containers/Error.js",[],"/Users/yuhengchen/Files/luna/luna-vendor/src/containers/Auth.js",[],"/Users/yuhengchen/Files/luna/luna-vendor/src/components/Navigation/Navigation.js",[],"/Users/yuhengchen/Files/luna/luna-vendor/src/components/ProductList/TableView.js",[],"/Users/yuhengchen/Files/luna/luna-vendor/src/components/ProductList/CardView.js",[],"/Users/yuhengchen/Files/luna/luna-vendor/src/components/Loading.js",[],"/Users/yuhengchen/Files/luna/luna-vendor/src/components/ProductList/ProductCard.js",[],"/Users/yuhengchen/Files/luna/luna-vendor/src/containers/Profile.js",["83","84","85","86"],"import React, { useState } from 'react';\nimport { useQuery, useMutation, gql } from '@apollo/client';\nimport { useHistory } from \"react-router\";\nimport { AUTH_TOKEN, VENDOR_ID } from \"../constants\"\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faCheck } from '@fortawesome/free-solid-svg-icons'\nimport { Container, Button, Form, Card, Toast } from \"react-bootstrap\";\nimport '../styles.css'\n\nconst GET_VENDOR = gql\n    `query Query($getVendorByIdId: ID!) {\n    getVendorByID(id: $getVendorByIdId) {\n      email\n      phone\n      wechat\n      credits\n    }\n  }`\n\nconst UPDATE_VENDOR = gql`\nmutation VendorUpdateMutation($vendorUpdateId: Int!, $vendorUpdateInput: VendorUpdateInput!) {\n    vendorUpdate(id: $vendorUpdateId, input: $vendorUpdateInput) {\n      phone\n      wechat\n    }\n  }\n`\n\nfunction Profile(props) {\n    const [email, setEmail] = useState()\n    const [wechat, setWechat] = useState()\n    const [phone, setPhone] = useState()\n\n    const [showToast, setToast] = useState(false)\n\n    const { loading, data } = useQuery(GET_VENDOR, {\n        variables: {\n            \"getVendorByIdId\": localStorage.getItem(VENDOR_ID)\n        },\n        onCompleted: (data) => {\n            setEmail(data.getVendorByID.email)\n            setWechat(data.getVendorByID.wechat)\n            setPhone(data.getVendorByID.phone)\n        }\n    })\n\n    const [updateVendor] = useMutation(UPDATE_VENDOR, {\n        variables: {\n            \"vendorUpdateId\": Number(localStorage.getItem(VENDOR_ID)),\n            \"vendorUpdateInput\": {\n                \"phone\": phone,\n                \"wechat\": wechat\n            }\n        },\n        onCompleted: (data) => {\n            setToast(true)\n            setWechat(data.vendorUpdate.wechat)\n            setPhone(data.vendorUpdate.phone)\n            setTimeout(() => setToast(false), 1500)\n        }\n    })\n\n    return (\n        <Container className='mt-5' style={{ maxWidth: '400px' }}>\n\n\n            <Card border='light'>\n                <Card.Body>\n                    <Card.Title className='title mb-3'>我的账号</Card.Title>\n\n                    <Form.Group>\n                        <Form.Label className='label'>账号</Form.Label>\n                        <Form.Control\n                            disabled\n                            value={email}\n                        // onChange={e => setEmail(e.target.value)}\n                        />\n                    </Form.Group>\n\n                    <Form.Group>\n                        <Form.Label className='label'>微信</Form.Label>\n                        <Form.Control\n                            value={wechat}\n                            onChange={e => setWechat(e.target.value)} />\n                    </Form.Group>\n\n                    <Form.Group className='label'>\n                        <Form.Label>联系电话</Form.Label>\n                        <Form.Control\n                            value={phone}\n                            onChange={e => setPhone(e.target.value)} />\n                    </Form.Group>\n\n                    <Button className=\"button\" variant=\"warning\" style={{ marginTop: \"30px\" }}\n                        onClick={updateVendor}\n                    >\n                        保存更改\n                    </Button>\n\n\n                </Card.Body>\n            </Card>\n\n            <Toast\n                className='mt-3'\n                show={showToast}\n            // style={{\n            //     position: 'fixed',\n            //     bottom: '20px',\n            //     right: '20px',\n            // }}\n            >\n                <Toast.Body><FontAwesomeIcon icon={faCheck} color='green' /> 信息已更新</Toast.Body>\n            </Toast>\n        </Container>\n    )\n}\n\nexport default Profile","/Users/yuhengchen/Files/luna/luna-vendor/src/containers/Product/AddProduct.js",["87"],"import React, { useState } from 'react'\nimport { useHistory } from 'react-router';\n\nimport { gql, useMutation } from '@apollo/client';\nimport { VENDOR_ID } from \"../../constants\"\n\nimport { Form, Button, Container, Col, Row, Card, InputGroup, Spinner, Image } from 'react-bootstrap'\nimport '../../styles.css'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faLink } from '@fortawesome/free-solid-svg-icons'\n\nconst CREATE_PRODUCT = gql`\n    mutation Mutation(\n        $createProductName: String!,\n        $createProductBrand: String!,\n        $createProductVendorId: Int!,\n        $createProductPrice: Float!,\n        $createProductDescription: String!,\n        $createProductProvidedQuantity: Int!,\n        $createProductAmazonLink: String!,\n        $createProductRequirement: Requirement!,\n        $createProductSearchKeyWord: String!,\n        $createProductCurrentAmazonLocation: String!,\n        $createProductImages: [String]) {\n    createProduct(\n        name: $createProductName,\n        brand: $createProductBrand,\n        vendor_id: $createProductVendorId,\n        price: $createProductPrice, \n        description: $createProductDescription, \n        provided_quantity: $createProductProvidedQuantity, \n        amazon_link: $createProductAmazonLink, \n        requirement: $createProductRequirement, \n        search_key_word: $createProductSearchKeyWord, \n        current_amazon_location: $createProductCurrentAmazonLocation, \n        images: $createProductImages) {\n        id\n    }\n    }\n`\n\nconst AddProduct = () => {\n    const history = useHistory()\n\n    const [product_name, set_product_name] = useState('')\n    const [brand, set_brand] = useState('')\n    const [price, set_price] = useState('')\n    const [amazon_link, set_amazon_link] = useState('')\n    const [amazon_location, set_amazon_location] = useState('')\n    const [search_key_word, set_search_key_word] = useState('')\n    const [description, set_description] = useState('')\n    const [requirement, set_requirement] = useState('TYPE0')\n    const [provided_quantity, set_provided_quantity] = useState('')\n    const [images, set_images] = useState('')\n\n    const [uploaded, set_uploaded] = useState(true)\n    const [error, set_error] = useState('')\n    const [imgError, set_img_error] = useState('')\n\n    const [product, { loading }] = useMutation(CREATE_PRODUCT, {\n        variables: {\n            \"createProductName\": product_name,\n            \"createProductBrand\": brand,\n            \"createProductVendorId\": Number(localStorage.getItem(VENDOR_ID)),\n            \"createProductPrice\": parseFloat(price),\n            \"createProductDescription\": description,\n            \"createProductProvidedQuantity\": Number(provided_quantity),\n            \"createProductAmazonLink\": amazon_link,\n            \"createProductRequirement\": requirement,\n            \"createProductSearchKeyWord\": search_key_word,\n            \"createProductCurrentAmazonLocation\": amazon_location,\n            \"createProductImages\": images\n        },\n        onCompleted: (p) => {\n            console.log(p)\n            history.push('/')\n        },\n        onError: (e) => {\n            set_error(e.message);\n        }\n    })\n\n    // if(loading) console.log('loading: ', loading)\n\n    const uploadImage = () => {\n        const { files } = document.querySelector('input[type=\"file\"]')\n        console.log('files: ', files)\n        const formData = new FormData();\n        formData.append('file', files[0]);\n        formData.append('upload_preset', 'product_create');\n        const options = {\n            method: 'POST',\n            body: formData,\n        };\n\n        return fetch('https://api.Cloudinary.com/v1_1/drrtelhft/image/upload', options)\n            .then(res => res.json())\n            .then(res => {\n                console.log('image url: ', res.secure_url)\n                if (res.secure_url) {\n                    set_images([res.secure_url])\n                    set_img_error('')\n                    set_uploaded(false)\n                }\n                else {\n                    set_img_error('上传失败, 请重试')\n                }\n            })\n            .catch(err => {\n                console.log('error: ', err)\n            });\n    }\n\n    return (\n        <Container className='mt-5 mb-5'>\n            <h1 className='title mb-3 '>新增商品</h1>\n            <Card border='light p-3'>\n                <Card.Body>\n                {/* <Card.Text className='title'>添加商品</Card.Text> */}\n                    <Row>\n                        <Col >\n                            <Form.Group>\n                                <Form.Label className='label'> 产品名称 </Form.Label>\n                                <Form.Control type=\"text\" onChange={e => set_product_name(e.target.value)} />\n                            </Form.Group>\n                            <Row>\n                                <Col>\n                                    <Form.Group>\n                                        <Form.Label className='label'> 品牌 </Form.Label>\n                                        <Form.Control type=\"text\" onChange={e => set_brand(e.target.value)} />\n                                    </Form.Group>\n                                </Col>\n                                <Col xl={4}>\n                                    <Form.Group>\n                                        <Form.Label className='label'> 原价 </Form.Label>\n                                        <InputGroup className=\"mb-3\">\n                                            <InputGroup.Prepend>\n                                                <InputGroup.Text>$</InputGroup.Text>\n                                            </InputGroup.Prepend>\n                                            <Form.Control placeholder=\"0.00\" type=\"text\" onChange={e => set_price(e.target.value)} />\n                                        </InputGroup>\n                                    </Form.Group>\n                                </Col>\n                            </Row>\n\n\n                            <Form.Group>\n                                <Form.Label className='label'> 亚马逊产品链接 </Form.Label>\n                                <InputGroup className=\"mb-3\">\n                                    <InputGroup.Prepend>\n                                        <InputGroup.Text><FontAwesomeIcon icon={faLink} /></InputGroup.Text>\n                                    </InputGroup.Prepend>\n                                    <Form.Control type=\"text\" onChange={e => set_amazon_link(e.target.value)} />\n                                </InputGroup>\n                            </Form.Group>\n                            <Form.Group>\n                                <Form.Label className='label'> 产品描述 </Form.Label>\n                                <Form.Control as=\"textarea\" rows='10' onChange={e => set_description(e.target.value)} />\n                            </Form.Group>\n                        </Col>\n\n                        <Col lg={1}></Col>\n\n                        <Col lg={4}>\n                            <Form.Group>\n                                <Form.Label className='label'> 留评要求 </Form.Label>\n                                <Form.Control\n                                    as=\"select\"\n                                    className=\"mr-sm-2\"\n                                    id=\"inlineFormCustomSelect\"\n                                    custom\n                                    onChange={e => set_requirement(e.target.value)}\n                                >\n                                    <option value=\"TYPE0\">仅下单</option>\n                                    <option value=\"TYPE1\">5星</option>\n                                    <option value=\"TYPE2\">5星+评论</option>\n                                    <option value=\"TYPE3\">5星+评论+图片</option>\n                                </Form.Control>\n                            </Form.Group>\n\n                            <Form.Group >\n                                <Form.Label className='label'> 所需单数 </Form.Label>\n                                <InputGroup className=\"mb-3\">\n                                    <Form.Control placeholder=\"0\" type=\"text\" onChange={e => set_provided_quantity(e.target.value)} />\n                                    <InputGroup.Append>\n                                        <InputGroup.Text id=\"basic-addon2\">个</InputGroup.Text>\n                                    </InputGroup.Append>\n                                </InputGroup>\n                            </Form.Group>\n\n                            <Form.Group>\n                                <Form.Label className='label'> 搜索关键词 </Form.Label>\n                                <Form.Control type=\"text\" onChange={e => set_search_key_word(e.target.value)} />\n                            </Form.Group>\n\n                            <Form.Group>\n                                <Form.Label className='label'> 商品当前在亚马逊网站处在 </Form.Label>\n                                <InputGroup\n                                    className=\"mb-3\"\n                                    style={{ width: '140px' }}\n                                >\n                                    <InputGroup.Prepend>\n                                        <InputGroup.Text >第</InputGroup.Text>\n                                    </InputGroup.Prepend>\n                                    <Form.Control type=\"text\" placeholder='?' onChange={e => set_amazon_location(e.target.value)} />\n                                    <InputGroup.Append>\n                                        <InputGroup.Text id=\"basic-addon2\">页</InputGroup.Text>\n                                    </InputGroup.Append>\n                                </InputGroup>\n                            </Form.Group>\n\n\n                            <Form.File custom={false}>\n                                <Form.File.Label className='label' data-browse=\"Browse files\">产品图片</Form.File.Label>\n                                <Container>\n                                    <Row>\n                                        <Form.File.Input isValid={false} />\n                                    </Row>\n                                    <Row className='justify-content-between mt-1 align-items-center' >\n                                        <Button className='button mt-2' variant=\"dark\" onClick={uploadImage}>上传图片</Button>\n                                        <div className='mt-2' style={{ color: 'red' }}>{imgError}</div>\n                                    </Row>\n                                    {/* <Row lg={6}>\n                                        <Image src={images[0]} fluid/>\n                                    </Row> */}\n                                </Container>\n                            </Form.File>\n\n                        </Col>\n                    </Row>\n                    <Col>\n                        <Row className='justify-content-end' style={{ alignItems: 'center' }}>\n                            {loading ? <Spinner className='mr-3' animation=\"border\" /> : <div className='mr-3' style={{ color: 'red' }}>{error}</div>}\n                            <Button disabled={uploaded} className='button' variant=\"warning\" onClick={product}>添加</Button>\n                        </Row>\n                    </Col>\n                </Card.Body>\n            </Card>\n        </Container>\n    )\n}\n\nexport default AddProduct;","/Users/yuhengchen/Files/luna/luna-vendor/src/containers/Product/ViewProduct.js",["88","89","90","91","92","93","94","95","96","97","98","99","100","101"],"/Users/yuhengchen/Files/luna/luna-vendor/src/containers/Product/ProductList.js",["102","103","104"],"import { useState } from 'react'\nimport { Container, Row, Button, Col } from 'react-bootstrap'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faPlus } from '@fortawesome/free-solid-svg-icons'\n\nimport CardView from '../../components/ProductList/CardView'\nimport TableView from '../../components/ProductList/TableView'\nimport { useHistory } from 'react-router'\n\n\nfunction ProductList(props) {\n    const history = useHistory()\n\n    const [view, setView] = useState('cards')\n\n    return (\n        <Container className='mt-3'>\n            <Row className='justify-content-between'>\n                <Col className='title mt-3'>商品一览</Col>\n                <Col className='mt-3' sm='auto'>\n                    <Button className='button' variant='success' onClick={()=>{history.push('/add')}}>\n                        <FontAwesomeIcon icon={faPlus} />&nbsp; 添加商品\n                    </Button>\n                </Col>\n            </Row>\n            <hr className='mb-3'/>\n\n            {/* <TableView /> */}\n            <CardView />\n        </Container>\n    )\n}\n\nexport default ProductList;","/Users/yuhengchen/Files/luna/luna-vendor/src/containers/Order/Order.js",["105","106"],"import { useState } from 'react';\nimport { useQuery, useMutation, gql } from '@apollo/client';\nimport { useHistory, useParams } from \"react-router\";\nimport { AUTH_TOKEN, VENDOR_ID } from \"../../constants\"\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faCheck, faCopy } from '@fortawesome/free-solid-svg-icons'\nimport { Container, Button, Badge, Card, OverlayTrigger, Tooltip, Row, Col, Image } from \"react-bootstrap\";\nimport '../../styles.css'\n\nimport Loading from '../../components/Loading'\n\nconst GET_VENDOR_ID = gql`\nquery Query($getOrderByIdId: ID!) {\n    getOrderByID(id: $getOrderByIdId) {\n      vendor_id\n    }\n  }\n`\nconst GET_ORDER = gql`\nquery Query($getOrderByIdId: ID!) {\n    getOrderByID(id: $getOrderByIdId) {\n      product {\n        name\n        price\n      }\n      az_order_number\n      order_screenshot\n      payment\n      created_date\n      amazon_review_screenshot\n      order_status\n      user {\n        payment_type\n        payment_account_id\n      }\n    }\n  }\n`\n\n\nfunction Order(props) {\n    const { orderId } = useParams()\n    const history = useHistory()\n\n    const { loading } = useQuery(GET_VENDOR_ID, {\n        variables: {\n            \"getOrderByIdId\": orderId\n        },\n        onCompleted: (data) => {\n            if (data.getOrderByID.vendor_id !== Number(localStorage.getItem(VENDOR_ID))) history.push('/err')\n        }\n    })\n\n    const [productName, setProductName] = useState('')\n    const [price, setPrice] = useState('')\n    const [amzOrderNumber, setAmzOrderNumber] = useState('')\n    const [purchaseImg, setPurchaseImg] = useState('')\n    const [reviewImg, setReviewImg] = useState('')\n    const [date, setDate] = useState('')\n    const [status, setStatus] = useState('')\n    const [payType, setPayType] = useState('')\n    const [payId, setPayId] = useState('')\n\n    const [tooltipMessage, setTooltipMessage] = useState('复制到剪贴板')\n\n\n    useQuery(GET_ORDER, {\n        variables: {\n            \"getOrderByIdId\": orderId\n        },\n        onCompleted: (data) => {\n            setProductName(data.getOrderByID.product.name)\n            setPrice(data.getOrderByID.product.price)\n            setAmzOrderNumber(data.getOrderByID.az_order_number)\n            setPurchaseImg(data.getOrderByID.order_screenshot)\n            setStatus(data.getOrderByID.order_status)\n            setDate(data.getOrderByID.created_date)\n            setReviewImg(data.getOrderByID.amazon_review_screenshot)\n            setPayType(data.getOrderByID.user.payment_type)\n            setPayId(data.getOrderByID.user.payment_account_id)\n        }\n    })\n\n    const pill = (status) => {\n        switch (status) {\n            case 'APPLIED': return { color: 'info', text: '待下单' }\n            case 'PURCHASED': return { color: 'warning', text: '待留评' }\n            case 'REVIEWED': return { color: 'danger', text: '待审核' }\n            case 'APPROVED': return { color: 'success', text: '待结算' }\n            case 'FINISHED': return { color: 'dark', text: '已完成' }\n            default: return { color: 'light', text: '' }\n        }\n    }\n\n    const copyPayId = () => {\n        navigator.clipboard.writeText(payId)\n        setTooltipMessage('已复制!')\n        setTimeout(() => {\n            setTooltipMessage('复制到剪贴板')\n        }, 2000);\n    }\n\n\n    if (loading) return <Loading centered={true} />\n    return (\n        <Container className='mt-5 mb-4' style={{ maxWidth: '1000px' }}>\n            <Card border='light'>\n                <Card.Body className='p-5'>\n                    <Row className='justify-content-between' style={{ alignItems: 'center' }}>\n                        <Col xs='auto' className='mt-1 mb-1'>\n                            <div className='label'>{new Date(Number(date)).toLocaleDateString()}</div>\n                            <div className='title blue'>订单 #{orderId} </div>\n                        </Col>\n                        <Col xs='auto'><Badge className='heading3 p-2' pill variant={pill(status).color}>&nbsp;{pill(status).text}&nbsp;</Badge></Col>\n                        {/* <Col className='label mt-3'></Col>\n                        <Col className='mt-3' sm='auto'>\n\n                        </Col> */}\n                    </Row>\n\n                    <Card.Text className='one-line text ml-1'>{productName}</Card.Text>\n                    <hr className='mb-3' />\n\n                    <Row className='mb-5'>\n                        <Col sm={2}>\n                            <Card.Text className='heading1 blue mb-0'>亚马逊单号</Card.Text>\n                        </Col>\n                        <Col sm={3}>\n                            <Card.Text className='heading3 mb-3'>{amzOrderNumber ? amzOrderNumber : '[暂无订单号]'}</Card.Text>\n                        </Col>\n                        <Col sm={1}></Col>\n                        <Col sm={2}>\n                            <Card.Text className='heading1 blue mb-1'>结算信息</Card.Text>\n                        </Col>\n                        <Col sm={4}>\n                            <Card.Text className='heading3 mb-1'>支付应用: {payType}</Card.Text>\n                            <Card.Text className='heading3 mb-2'>支付账号: {payId} &nbsp;\n                                <OverlayTrigger\n                                    placement='right'\n                                    overlay={\n                                        <Tooltip className='ml-1'>\n                                            {tooltipMessage}\n                                        </Tooltip>\n                                    }\n                                >\n                                    <FontAwesomeIcon icon={faCopy} className='blue' onClick={copyPayId} />\n                                </OverlayTrigger>\n                            </Card.Text>\n                            <Card.Text className={status==='REVIEWED'?'heading1 mb-2 yellow':'heading3'}>待补贴金额: ${price}</Card.Text>\n                            {status==='REVIEWED' && <Button className='button' variant='warning'><FontAwesomeIcon icon={faCheck}/> 我已完成补贴</Button>}\n                        </Col>\n                    </Row>\n                    {purchaseImg &&\n                        <>\n                            <hr />\n                            <Row className='mb-1'>\n                                <Col xs={2}><Card.Text className='heading1 blue'>订单截图</Card.Text></Col>\n                                <Col><Image thumbnail fluid src={purchaseImg} /></Col>\n                            </Row>\n                        </>}\n\n                    {reviewImg &&\n                        <>\n                            <hr className='mt-5' />\n                            <Row className='mb-1'>\n                                <Col xs={2}><Card.Text className='heading1 blue'>留评截图</Card.Text></Col>\n                                <Col><Image thumbnail fluid src={reviewImg} /></Col>\n                            </Row>\n                        </>}\n\n\n                </Card.Body>\n            </Card>\n        </Container>\n    )\n}\n\nexport default Order","/Users/yuhengchen/Files/luna/luna-vendor/src/containers/Order/OrderList.js",["107","108","109","110","111","112","113","114","115","116"],"import { useState } from 'react';\nimport { useQuery, useMutation, gql } from '@apollo/client';\nimport { useHistory } from \"react-router\";\nimport { AUTH_TOKEN, VENDOR_ID } from \"../../constants\"\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faCheck } from '@fortawesome/free-solid-svg-icons'\nimport { Container, Button, Form, Card, Toast } from \"react-bootstrap\";\nimport '../../styles.css'\n\nimport Loading from '../../components/Loading'\nimport OrderItem from '../../components/OrderItem';\n\nconst GET_ORDERS = gql`\nquery Query($getOrdersByVendorIdId: ID!) {\n    getOrdersByVendorID(id: $getOrdersByVendorIdId) {\n      id\n      product {\n        name\n        requirement\n      }\n      order_status\n      az_order_number\n      order_screenshot\n      amazon_review_screenshot\n      created_date\n    }\n  }`\n\n\nfunction OrderList(props) {\n    const { loading, data } = useQuery(GET_ORDERS, {\n        variables: {\n            \"getOrdersByVendorIdId\": localStorage.getItem(VENDOR_ID)\n        }\n    })\n\n    if (loading) return <Loading centered={true} />\n    return (\n        <Container className='mt-5' style={{maxWidth:'800px'}}>\n            <div className='title'>订单列表</div>\n            <hr className='mb-4'/>\n            {data.getOrdersByVendorID.map((d) => <OrderItem data={d} />)}\n        </Container>\n    )\n}\n\nexport default OrderList","/Users/yuhengchen/Files/luna/luna-vendor/src/components/OrderItem.js",["117","118","119","120","121","122","123","124","125","126","127","128","129","130","131"],"import { useState } from 'react';\nimport { useQuery, useMutation, gql } from '@apollo/client';\nimport { useHistory, useParams } from \"react-router\";\nimport { AUTH_TOKEN, VENDOR_ID } from \"../constants\"\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faCopy } from '@fortawesome/free-solid-svg-icons'\nimport { Container, Button, Badge, Card, OverlayTrigger, Tooltip, Row, Col, Image } from \"react-bootstrap\";\nimport '../styles.css'\n\nfunction OrderItem(props) {\n\n    const history = useHistory()\n    const redirect = (destination) => {\n        history.push('/' + destination)\n    }\n\n    const pill = () => {\n        switch (props.data.order_status) {\n            case 'APPLIED': return { color: 'info', text: '待下单' }\n            case 'PURCHASED': return { color: 'warning', text: '待留评' }\n            case 'REVIEWED': return { color: 'danger', text: '待审核' }\n            case 'APPROVED': return { color: 'success', text: '待结算' }\n            case 'FINISHED': return { color: 'dark', text: '已完成' }\n            default: return { color: 'light', text: '' }\n        }\n    }\n\n    return (\n        <Card border='light' onClick={() => history.push('/order/' + props.data.id)}>\n            <Card.Body>\n                <Row className='justify-content-between mb-1' style={{ alignItems: 'center' }}>\n                    <Col className='heading1' xs='auto' style={{ alignContent: 'start' }}>\n                        <span style={{display:'inline-block'}}>订单 #{props.data.id} </span>\n                        <Badge className='heading3 p-1 ml-2' pill variant={pill().color} style={{display:'inline-block'}}>\n                            &nbsp;{pill().text}&nbsp;\n                        </Badge>\n                    </Col>\n                    {/* <Col xs='auto'><Badge className='heading3 p-2' pill variant={pill().color}>&nbsp;{pill().text}&nbsp;</Badge></Col> */}\n                    <Col className='label' xs='auto'>{new Date(Number(props.data.created_date)).toLocaleDateString()}</Col>\n                </Row>\n\n                <Card.Text className='one-line heading3'>{props.data.product.name}</Card.Text>\n\n            </Card.Body>\n        </Card>\n    )\n}\n\n// product {\n//     \n//     requirement\n//   }\n//   az_order_number\n//   order_screenshot\n//   amazon_review_screenshot\n//   created_date\n//   \n// }\n\nexport default OrderItem",{"ruleId":"132","replacedBy":"133"},{"ruleId":"134","replacedBy":"135"},{"ruleId":"136","severity":1,"message":"137","line":3,"column":10,"nodeType":"138","messageId":"139","endLine":3,"endColumn":20},{"ruleId":"136","severity":1,"message":"140","line":4,"column":10,"nodeType":"138","messageId":"139","endLine":4,"endColumn":20},{"ruleId":"136","severity":1,"message":"141","line":36,"column":13,"nodeType":"138","messageId":"139","endLine":36,"endColumn":20},{"ruleId":"136","severity":1,"message":"142","line":36,"column":22,"nodeType":"138","messageId":"139","endLine":36,"endColumn":26},{"ruleId":"136","severity":1,"message":"143","line":7,"column":72,"nodeType":"138","messageId":"139","endLine":7,"endColumn":77},{"ruleId":"136","severity":1,"message":"144","line":7,"column":45,"nodeType":"138","messageId":"139","endLine":7,"endColumn":49},{"ruleId":"136","severity":1,"message":"145","line":61,"column":7,"nodeType":"138","messageId":"139","endLine":61,"endColumn":20},{"ruleId":"136","severity":1,"message":"146","line":64,"column":11,"nodeType":"138","messageId":"139","endLine":64,"endColumn":18},{"ruleId":"136","severity":1,"message":"147","line":90,"column":12,"nodeType":"138","messageId":"139","endLine":90,"endColumn":19},{"ruleId":"136","severity":1,"message":"148","line":94,"column":12,"nodeType":"138","messageId":"139","endLine":94,"endColumn":20},{"ruleId":"136","severity":1,"message":"149","line":94,"column":22,"nodeType":"138","messageId":"139","endLine":94,"endColumn":33},{"ruleId":"136","severity":1,"message":"150","line":95,"column":12,"nodeType":"138","messageId":"139","endLine":95,"endColumn":17},{"ruleId":"136","severity":1,"message":"151","line":95,"column":19,"nodeType":"138","messageId":"139","endLine":95,"endColumn":27},{"ruleId":"136","severity":1,"message":"152","line":96,"column":12,"nodeType":"138","messageId":"139","endLine":96,"endColumn":23},{"ruleId":"136","severity":1,"message":"153","line":98,"column":12,"nodeType":"138","messageId":"139","endLine":98,"endColumn":20},{"ruleId":"136","severity":1,"message":"154","line":99,"column":19,"nodeType":"138","messageId":"139","endLine":99,"endColumn":28},{"ruleId":"136","severity":1,"message":"142","line":102,"column":22,"nodeType":"138","messageId":"139","endLine":102,"endColumn":26},{"ruleId":"136","severity":1,"message":"155","line":156,"column":11,"nodeType":"138","messageId":"139","endLine":156,"endColumn":24},{"ruleId":"156","severity":1,"message":"157","line":159,"column":9,"nodeType":"158","messageId":"159","endLine":164,"endColumn":10},{"ruleId":"136","severity":1,"message":"160","line":7,"column":8,"nodeType":"138","messageId":"139","endLine":7,"endColumn":17},{"ruleId":"136","severity":1,"message":"161","line":14,"column":12,"nodeType":"138","messageId":"139","endLine":14,"endColumn":16},{"ruleId":"136","severity":1,"message":"162","line":14,"column":18,"nodeType":"138","messageId":"139","endLine":14,"endColumn":25},{"ruleId":"136","severity":1,"message":"163","line":2,"column":20,"nodeType":"138","messageId":"139","endLine":2,"endColumn":31},{"ruleId":"136","severity":1,"message":"140","line":4,"column":10,"nodeType":"138","messageId":"139","endLine":4,"endColumn":20},{"ruleId":"136","severity":1,"message":"164","line":1,"column":10,"nodeType":"138","messageId":"139","endLine":1,"endColumn":18},{"ruleId":"136","severity":1,"message":"163","line":2,"column":20,"nodeType":"138","messageId":"139","endLine":2,"endColumn":31},{"ruleId":"136","severity":1,"message":"137","line":3,"column":10,"nodeType":"138","messageId":"139","endLine":3,"endColumn":20},{"ruleId":"136","severity":1,"message":"140","line":4,"column":10,"nodeType":"138","messageId":"139","endLine":4,"endColumn":20},{"ruleId":"136","severity":1,"message":"165","line":5,"column":10,"nodeType":"138","messageId":"139","endLine":5,"endColumn":25},{"ruleId":"136","severity":1,"message":"166","line":6,"column":10,"nodeType":"138","messageId":"139","endLine":6,"endColumn":17},{"ruleId":"136","severity":1,"message":"167","line":7,"column":21,"nodeType":"138","messageId":"139","endLine":7,"endColumn":27},{"ruleId":"136","severity":1,"message":"168","line":7,"column":29,"nodeType":"138","messageId":"139","endLine":7,"endColumn":33},{"ruleId":"136","severity":1,"message":"144","line":7,"column":35,"nodeType":"138","messageId":"139","endLine":7,"endColumn":39},{"ruleId":"136","severity":1,"message":"169","line":7,"column":41,"nodeType":"138","messageId":"139","endLine":7,"endColumn":46},{"ruleId":"136","severity":1,"message":"164","line":1,"column":10,"nodeType":"138","messageId":"139","endLine":1,"endColumn":18},{"ruleId":"136","severity":1,"message":"170","line":2,"column":10,"nodeType":"138","messageId":"139","endLine":2,"endColumn":18},{"ruleId":"136","severity":1,"message":"163","line":2,"column":20,"nodeType":"138","messageId":"139","endLine":2,"endColumn":31},{"ruleId":"136","severity":1,"message":"171","line":2,"column":33,"nodeType":"138","messageId":"139","endLine":2,"endColumn":36},{"ruleId":"136","severity":1,"message":"172","line":3,"column":22,"nodeType":"138","messageId":"139","endLine":3,"endColumn":31},{"ruleId":"136","severity":1,"message":"140","line":4,"column":10,"nodeType":"138","messageId":"139","endLine":4,"endColumn":20},{"ruleId":"136","severity":1,"message":"173","line":4,"column":22,"nodeType":"138","messageId":"139","endLine":4,"endColumn":31},{"ruleId":"136","severity":1,"message":"165","line":5,"column":10,"nodeType":"138","messageId":"139","endLine":5,"endColumn":25},{"ruleId":"136","severity":1,"message":"174","line":6,"column":10,"nodeType":"138","messageId":"139","endLine":6,"endColumn":16},{"ruleId":"136","severity":1,"message":"175","line":7,"column":10,"nodeType":"138","messageId":"139","endLine":7,"endColumn":19},{"ruleId":"136","severity":1,"message":"167","line":7,"column":21,"nodeType":"138","messageId":"139","endLine":7,"endColumn":27},{"ruleId":"136","severity":1,"message":"176","line":7,"column":42,"nodeType":"138","messageId":"139","endLine":7,"endColumn":56},{"ruleId":"136","severity":1,"message":"177","line":7,"column":58,"nodeType":"138","messageId":"139","endLine":7,"endColumn":65},{"ruleId":"136","severity":1,"message":"143","line":7,"column":77,"nodeType":"138","messageId":"139","endLine":7,"endColumn":82},{"ruleId":"136","severity":1,"message":"178","line":13,"column":11,"nodeType":"138","messageId":"139","endLine":13,"endColumn":19},"no-native-reassign",["179"],"no-negated-in-lhs",["180"],"no-unused-vars","'useHistory' is defined but never used.","Identifier","unusedVar","'AUTH_TOKEN' is defined but never used.","'loading' is assigned a value but never used.","'data' is assigned a value but never used.","'Image' is defined but never used.","'Card' is defined but never used.","'STATUS_TOGGLE' is assigned a value but never used.","'history' is assigned a value but never used.","'created' is assigned a value but never used.","'updating' is assigned a value but never used.","'setUpdating' is assigned a value but never used.","'saved' is assigned a value but never used.","'setSaved' is assigned a value but never used.","'updateError' is assigned a value but never used.","'uploaded' is assigned a value but never used.","'set_error' is assigned a value but never used.","'deleteProduct' is assigned a value but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","'TableView' is defined but never used.","'view' is assigned a value but never used.","'setView' is assigned a value but never used.","'useMutation' is defined but never used.","'useState' is defined but never used.","'FontAwesomeIcon' is defined but never used.","'faCheck' is defined but never used.","'Button' is defined but never used.","'Form' is defined but never used.","'Toast' is defined but never used.","'useQuery' is defined but never used.","'gql' is defined but never used.","'useParams' is defined but never used.","'VENDOR_ID' is defined but never used.","'faCopy' is defined but never used.","'Container' is defined but never used.","'OverlayTrigger' is defined but never used.","'Tooltip' is defined but never used.","'redirect' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]